// Generated by CoffeeScript 1.6.3
(function() {
  define(['marked', 'client'], function(marked, client) {
    var editor, formatLists, save_message, update;
    client = client.client;
    editor = ace.edit('editor');
    editor.setTheme('ace/theme/monokai');
    editor.getSession().setMode('ace/mode/markdown');
    formatLists = function() {
      return dom.viewer.find('ol').each(function() {
        var level, t, type;
        t = $(this);
        level = t.parents().filter('ol, ul').length;
        type = (function() {
          switch (level % 3) {
            case 0:
              return '1';
            case 1:
              return 'a';
            case 2:
              return 'i';
          }
        })();
        return t.attr({
          type: type
        });
      });
    };
    save_message = function(doc) {
      var connect_msg, connective, is_connected, is_named, name_msg, warning;
      if (doc === '') {
        return ['', false];
      } else {
        is_connected = client.isAuthenticated();
        is_named = dom.filename.val() !== '';
        if (is_connected && is_named) {
          return ["All changes saved to Dropbox", false];
        } else {
          warning = true;
          connect_msg = is_connected ? '' : "connect to Dropbox";
          name_msg = is_named ? '' : "name this document";
          connective = !is_connected && !is_named ? ' and ' : '';
          return ["Warning: changes are not being saved. Please " + connect_msg + connective + name_msg + " to save your work.", true];
        }
      }
    };
    update = function(delta) {
      var doc, msg, warning, _ref;
      doc = editor.getValue();
      dom.viewer.html(marked(doc));
      formatLists();
      MathJax.Hub.Queue(['Typeset', MathJax.Hub, 'viewer']);
      _ref = save_message(doc), msg = _ref[0], warning = _ref[1];
      dom.save_message.css({
        color: warning ? '#a00' : '#aaa'
      });
      return dom.save_message.text(msg);
    };
    editor.on('change', update);
    return {
      editor: editor,
      update: update
    };
  });

}).call(this);
